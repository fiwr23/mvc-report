{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <nav>
        <ul>
            <li><a href="#kmom01">kmom01</a></li>
            <li><a href="#kmom02">kmom02</a></li>
            <li><a href="#kmom03">kmom03</a></li>
            <li><a href="#kmom04">kmom04</a></li>
            <li><a href="#kmom05">kmom05</a></li>
            <li><a href="#kmom06">kmom06</a></li>
            <li><a href="#kmom10">kmom10</a></li>
        </ul>
    </nav>
    <h1>Report</h1>
    <div id="kmom01" class="kmom">
    <h2>kmom01</h2>
    <p> Mina tidigare erfarenheter kring objektorientering kommer främst från python kursen jag nyligen klarade av.
        Där jobbade vi ingående med klasser - ritningarna för objekten som skapas, metoder, arv etc. Det ska bli intressant att se hur 
        objekt orienterad programmering i php skiljer sig. <br>Jag har också provat på lite objekt orienterad 
        programmering i javascript. 
        <br>
        Klasser är själva grunden/ritningen som vi får objekt/instanser från med hjälp av 'new' följt av klassens namn. Som exempel:<br>
        $NewInstance = new TheClass();<br>
        Nu kan man använda sig av metoder och spara unika data i det nya objektet. Man kan skapa flera objekt från samma klass bara de har unika namn.
        <br>
        Symfony är ett open source ramverk som bör effektivisera programmering genom ett smidigare återanvändande av kod. 
        Integrationen av twig bör även det effektivisera och möjliggöra återanvändandet av vyer. När jag blivit mer hemmastadd lär så vara fallet. 
        Just nu känner jag mest lite frustration då själva installationen av Symfony strulade. 
        Sedan fick jag mer bekymmer med encore då min node.js installation i windows "krockade" med den i ubuntu. 
        Förhoppningsvis ska allt flyta på bättre i fortsättningen.
        <br>
        Något extra intressant med artikeln “PHP The Right Way” är att den konstant hålls up to date vilket är extremt värdefullt 
        då nätet kryllar av gammal information som kanske inte stämmer längre. Det som jag vill lära mig mer av är unittesting. 
        <br>
        Mitt TIL är att med namespaces kan man gruppera funktioner och klasser. Det är även ett sätt att undvika namn kollisioner.
        <br>
    </p>
    </div>
    <div id="kmom02" class="kmom">
    <h2>kmom02</h2>
    <p>Text</p>
    </div>
    <div id="kmom03" class="kmom">
    <h2>kmom03</h2>
    <p>Text</p>
    </div>
    <div id="kmom04" class="kmom">
    <h2>kmom04</h2>
    <p>Text</p>
    </div>
    <div id="kmom05" class="kmom">
    <h2>kmom05</h2>
    <p>Text</p>
    </div>
    <div id="kmom06" class="kmom">
    <h2>kmom06</h2>
    <p>Text</p>
    </div>
    <div id="kmom10" class="kmom">
    <h2>kmom10</h2>
    <p>Text</p>
    </div>
{% endblock %}